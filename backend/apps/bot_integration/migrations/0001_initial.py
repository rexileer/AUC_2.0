# Generated by Django 4.2.7 on 2025-07-07 01:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('value_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bot Configuration',
                'verbose_name_plural': 'Bot Configurations',
                'db_table': 'bot_configuration',
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='BotWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('message', 'Message'), ('callback_query', 'Callback Query'), ('inline_query', 'Inline Query'), ('pre_checkout_query', 'Pre Checkout Query'), ('shipping_query', 'Shipping Query'), ('poll_answer', 'Poll Answer'), ('my_chat_member', 'My Chat Member'), ('chat_member', 'Chat Member'), ('chat_join_request', 'Chat Join Request')], max_length=50)),
                ('telegram_update_id', models.CharField(max_length=100)),
                ('telegram_user_id', models.CharField(blank=True, max_length=20)),
                ('telegram_username', models.CharField(blank=True, max_length=50)),
                ('raw_data', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Bot Webhook',
                'verbose_name_plural': 'Bot Webhooks',
                'db_table': 'bot_webhooks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['telegram_update_id'], name='bot_webhook_telegra_790a80_idx'), models.Index(fields=['telegram_user_id'], name='bot_webhook_telegra_86e3d5_idx'), models.Index(fields=['processed'], name='bot_webhook_process_90b1ef_idx')],
            },
        ),
        migrations.CreateModel(
            name='BotUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(max_length=20, unique=True)),
                ('telegram_username', models.CharField(blank=True, max_length=50, null=True)),
                ('telegram_first_name', models.CharField(blank=True, max_length=50)),
                ('telegram_last_name', models.CharField(blank=True, max_length=50)),
                ('telegram_language_code', models.CharField(blank=True, max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('suspended', 'Suspended'), ('blocked', 'Blocked')], default='pending', max_length=20)),
                ('api_key_linked', models.BooleanField(default=False)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('total_commands', models.PositiveIntegerField(default=0)),
                ('last_command_at', models.DateTimeField(blank=True, null=True)),
                ('registration_code', models.CharField(blank=True, max_length=10)),
                ('registration_expires', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bot_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bot User',
                'verbose_name_plural': 'Bot Users',
                'db_table': 'bot_users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BotSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_type', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('current_step', models.CharField(blank=True, max_length=50)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='bot_integration.botuser')),
            ],
            options={
                'verbose_name': 'Bot Session',
                'verbose_name_plural': 'Bot Sessions',
                'db_table': 'bot_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BotNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('bid_notifications', models.BooleanField(default=True)),
                ('outbid_notifications', models.BooleanField(default=True)),
                ('auction_end_notifications', models.BooleanField(default=True)),
                ('win_notifications', models.BooleanField(default=True)),
                ('new_item_notifications', models.BooleanField(default=False)),
                ('price_drop_notifications', models.BooleanField(default=False)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('max_notifications_per_hour', models.PositiveIntegerField(default=10)),
                ('digest_mode', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to='bot_integration.botuser')),
            ],
            options={
                'verbose_name': 'Bot Notification Settings',
                'verbose_name_plural': 'Bot Notification Settings',
                'db_table': 'bot_notification_settings',
            },
        ),
        migrations.CreateModel(
            name='BotAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('total_commands', models.PositiveIntegerField(default=0)),
                ('unique_commands', models.PositiveIntegerField(default=0)),
                ('failed_commands', models.PositiveIntegerField(default=0)),
                ('command_stats', models.JSONField(blank=True, default=dict)),
                ('avg_response_time', models.DurationField(blank=True, null=True)),
                ('notifications_sent', models.PositiveIntegerField(default=0)),
                ('notifications_failed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Bot Analytics',
                'verbose_name_plural': 'Bot Analytics',
                'db_table': 'bot_analytics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='BotCommand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('command', models.CharField(max_length=100)),
                ('command_args', models.JSONField(blank=True, default=dict)),
                ('raw_message', models.TextField(blank=True)),
                ('response_message', models.TextField(blank=True)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('message_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='bot_integration.botuser')),
            ],
            options={
                'verbose_name': 'Bot Command',
                'verbose_name_plural': 'Bot Commands',
                'db_table': 'bot_commands',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['bot_user', 'command'], name='bot_command_bot_use_bc2bd9_idx'), models.Index(fields=['status'], name='bot_command_status_8555cb_idx'), models.Index(fields=['created_at'], name='bot_command_created_276e6b_idx')],
            },
        ),
    ]
