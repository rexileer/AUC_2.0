# Generated by Django 4.2.7 on 2025-07-07 01:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('bid_placed', 'Bid Placed'), ('bid_outbid', 'Bid Outbid'), ('auction_ending', 'Auction Ending Soon'), ('auction_ended', 'Auction Ended'), ('auction_won', 'Auction Won'), ('auction_lost', 'Auction Lost'), ('new_item', 'New Item in Category'), ('price_drop', 'Price Drop'), ('comment_reply', 'Comment Reply'), ('payment_due', 'Payment Due'), ('welcome', 'Welcome Message'), ('system', 'System Notification'), ('custom', 'Custom Message')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_web_sent', models.BooleanField(default=False)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('is_telegram_sent', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('action_url', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(default='info', max_length=50)),
                ('color', models.CharField(default='primary', max_length=20)),
                ('show_toast', models.BooleanField(default=True)),
                ('auto_dismiss', models.BooleanField(default=True)),
                ('dismiss_timeout', models.PositiveIntegerField(default=5000)),
                ('is_displayed', models.BooleanField(default=False)),
                ('displayed_at', models.DateTimeField(blank=True, null=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('dismissed_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='web_notification', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Web Notification',
                'verbose_name_plural': 'Web Notifications',
                'db_table': 'web_notifications',
            },
        ),
        migrations.CreateModel(
            name='TelegramNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField()),
                ('parse_mode', models.CharField(choices=[('HTML', 'HTML'), ('Markdown', 'Markdown')], default='HTML', max_length=20)),
                ('inline_keyboard', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('blocked', 'Blocked by User')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_notification', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Telegram Notification',
                'verbose_name_plural': 'Telegram Notifications',
                'db_table': 'telegram_notifications',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('notification_type', models.CharField(choices=[('bid_placed', 'Bid Placed'), ('bid_outbid', 'Bid Outbid'), ('auction_ending', 'Auction Ending Soon'), ('auction_ended', 'Auction Ended'), ('auction_won', 'Auction Won'), ('auction_lost', 'Auction Lost'), ('new_item', 'New Item in Category'), ('price_drop', 'Price Drop'), ('comment_reply', 'Comment Reply'), ('payment_due', 'Payment Due'), ('welcome', 'Welcome Message'), ('custom', 'Custom Message')], max_length=20)),
                ('delivery_method', models.CharField(choices=[('web', 'Web Notification'), ('email', 'Email'), ('telegram', 'Telegram'), ('all', 'All Methods')], max_length=20)),
                ('title_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('html_template', models.TextField(blank=True)),
                ('subject_template', models.CharField(blank=True, max_length=200)),
                ('telegram_template', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('action_url', models.CharField(blank=True, max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'unique_together': {('notification_type', 'delivery_method')},
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('web_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('telegram_notifications', models.BooleanField(default=False)),
                ('bid_notifications', models.BooleanField(default=True)),
                ('auction_end_notifications', models.BooleanField(default=True)),
                ('outbid_notifications', models.BooleanField(default=True)),
                ('win_notifications', models.BooleanField(default=True)),
                ('comment_notifications', models.BooleanField(default=True)),
                ('system_notifications', models.BooleanField(default=True)),
                ('marketing_notifications', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('digest_frequency', models.CharField(choices=[('never', 'Never'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='never', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('sent', 'Sent'), ('failed', 'Failed'), ('read', 'Read'), ('dismissed', 'Dismissed'), ('expired', 'Expired')], max_length=20)),
                ('details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('html_content', models.TextField(blank=True)),
                ('text_content', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('email_id', models.CharField(blank=True, max_length=100)),
                ('bounce_reason', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_notification', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Email Notification',
                'verbose_name_plural': 'Email Notifications',
                'db_table': 'email_notifications',
            },
        ),
        migrations.CreateModel(
            name='BulkNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('target_type', models.CharField(choices=[('all', 'All Users'), ('active', 'Active Users'), ('bidders', 'Users with Bids'), ('sellers', 'Users with Items'), ('winners', 'Users with Wins'), ('custom', 'Custom Query')], max_length=20)),
                ('custom_query', models.TextField(blank=True)),
                ('send_web', models.BooleanField(default=True)),
                ('send_email', models.BooleanField(default=False)),
                ('send_telegram', models.BooleanField(default=False)),
                ('email_subject', models.CharField(blank=True, max_length=200)),
                ('email_html', models.TextField(blank=True)),
                ('telegram_message', models.TextField(blank=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('web_sent', models.PositiveIntegerField(default=0)),
                ('email_sent', models.PositiveIntegerField(default=0)),
                ('telegram_sent', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_notifications_created', to=settings.AUTH_USER_MODEL)),
                ('target_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bulk Notification',
                'verbose_name_plural': 'Bulk Notifications',
                'db_table': 'bulk_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_583549_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_19df93_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
    ]
